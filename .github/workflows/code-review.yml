name: Code Review

on:
  pull_request:
    paths:
      - '**/*.py'  # Adjust for your code language (e.g., .js, .java, .cpp)

# Add permissions block to allow writing to pull requests
permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to ensure we have the base commit
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub requests
          # Removed jq as we're not using it in the updated approach

      - name: Extract diff
        run: |
          # Use GitHub's provided refs instead of commit SHAs directly
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > diff.patch
          
      - name: Send diff to AI for review
        id: ai_review
        run: |
          # Create a more comprehensive prompt with better instructions
          cat > payload.json << EOF
          {
            "model": "deepseek/deepseek-r1-distill-llama-70b:free",
            "messages": [
              {
                "role": "system", 
                "content": "You are an expert code reviewer and software engineer specializing in best practices, clean code, performance optimization, security, and maintainability. Analyze the following code changes and provide constructive feedback. Focus on: 1) Security vulnerabilities, 2) Performance issues, 3) Code maintainability, 4) Potential bugs, 5) Adherence to best practices. Format your review with clear headings and bullet points. Be specific about file locations and line numbers when possible."
              },
              {
                "role": "user", 
                "content": "### PR Details:\n- Repository: ${{ github.repository }}\n- Branch: ${{ github.head_ref }} â†’ ${{ github.base_ref }}\n- Author: ${{ github.event.pull_request.user.login }}\n- Title: \"${{ github.event.pull_request.title }}\"\n- Description: \"${{ github.event.pull_request.body }}\"\n\n### Diff:\n\`\`\`diff\n$(cat diff.patch)\n\`\`\`\n\nPlease provide a thorough code review with actionable feedback."
              }
            ]
          }
          EOF
          
          # Send to OpenRouter with error handling
          if ! curl -s -S -f -X POST \
            -H "Authorization: Bearer ${{ secrets.OPENROUTER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d @payload.json \
            https://openrouter.ai/api/v1/chat/completions > review.json; then
            echo "::error::Failed to get AI review. Check API key and service availability."
            exit 1
          fi

      - name: Post review comments
        run: python post_comments.py review.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
