name: Code Review

on:
  pull_request:
    paths:
      - '**/*.py'  # Adjust for your code language (e.g., .js, .java, .cpp)
      - '!**/*.yml'  # Exclude .yml files from triggering the workflow

# Add permissions block to allow writing to pull requests
permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Extract diff
        run: |
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > diff.patch
          cat diff.patch

      - name: Send diff to AI for review
        run: |
          # Create a proper JSON payload with the working format
          echo '{
            "model": "deepseek/deepseek-r1-distill-llama-70b:free",
            "messages": [
              {
                "role": "system", 
                "content": "You are an expert code reviewer and software engineer specializing in best practices, clean code, performance optimization, security, and maintainability. Analyze the following code changes and provide constructive feedback. Focus on potential issues, improvements, and adherence to best practices. Highlight specific lines or sections that require attention. Suggest refactoring if necessary."
              },
              {
                "role": "user", 
                "content": "'"$(cat diff.patch | sed 's/"/\\"/g')"'"
              }
            ]
          }' > payload.json
          
          # Send to OpenRouter
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.OPENROUTER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d @payload.json \
            https://openrouter.ai/api/v1/chat/completions > review.json
          
          # Show the response for debugging
          cat review.json

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub requests

      - name: Post review comments
        run: python post_comments.py review.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_NAME: ${{ github.repository }}
